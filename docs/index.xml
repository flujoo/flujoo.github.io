<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>flujoo</title>
    <link>https://flujoo.github.io/</link>
    <description>Recent content on flujoo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://flujoo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate Accompaniment Progression</title>
      <link>https://flujoo.github.io/en/generate-accompaniment-progression/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/en/generate-accompaniment-progression/</guid>
      <description>Given a harmonic progression and the first accompaniment motif, how to automatically generate an entire accompaniment progression?
In this blog, I will tackle this problem with R language and R package &amp;ldquo;gm&amp;rdquo;. Please note that, for illustrative purposes, the solution presented here is only a simplified version. I will talk more about this in the last section.
Let&amp;rsquo;s first clarify the problem, before diving into it.
Clarify the Problem Take the beginning of Chopin&amp;rsquo;s nocturne Op.</description>
    </item>
    
    <item>
      <title>Three Types of Music Analysis</title>
      <link>https://flujoo.github.io/en/three-types-of-music-analysis/</link>
      <pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/en/three-types-of-music-analysis/</guid>
      <description>Music analysis is not a single method, framework, or theory; it has many different kinds. However, most kinds of music analysis can be put into the three categories I put forward in this blog.
Below I will talk about these three types of music analysis. And for illustrative purposes, I will use them to analyse Chopin&amp;rsquo;s nocturne Op.72 No.1. If you have not heard this nocturne yet, I highly recommend Maurizio Pollini&amp;rsquo;s performance.</description>
    </item>
    
    <item>
      <title>My Music Album &#34;Night&#34;</title>
      <link>https://flujoo.github.io/en/my-music-album-night/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/en/my-music-album-night/</guid>
      <description>I have been working on my first music album &amp;ldquo;Night&amp;rdquo; recently. This is a dark ambient album, which describes images and emotions related to night. The whole album is written for solo piano, so if you would like to play any piece of it, send me an email to get the score.
This album is not fully completed yet. I am posting here only the first four pieces:
Prelude &amp;ldquo;Midnight&amp;rdquo;  Prelude &amp;ldquo;Moonlight&amp;rdquo;  Prelude &amp;amp; Fugue &amp;ldquo;Street after Rain&amp;rdquo;  Sonata &amp;ldquo;A Rainy Night&amp;rdquo;  </description>
    </item>
    
    <item>
      <title>三类音乐分析</title>
      <link>https://flujoo.github.io/cn/three-types-of-music-analysis/</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/cn/three-types-of-music-analysis/</guid>
      <description>我们可以从很多角度分析一首音乐作品，比如分析它的风格，分析它的曲式结构，分析它的和声进行，分析它的素材的组织方式，分析它的情感，等等。分析的角度非常多，但我认为这些角度可以归纳为三类。本文将一一探讨这三类音乐分析。在这个过程中，肖邦夜曲 Op. 72 No. 1 会作为贯穿始终的例子。如果你没听过这首夜曲，可以试试 Maurizio Pollini 的演奏版本，那也是最打动我的版本。
第一类分析：结构与特征 拿到肖邦的夜曲，我们可以先从整体上分析它的特征。比如它的调性是 E 小调，拍速是行板，节拍是 4/4，等等。我们还可以分析它的结构。比如它具有 ABA&amp;rsquo;B&#39; 的曲式。也就是说，这首作品可以分成四个部分，分别是主题 A，主题 B，带有变化的主题 A 和带有变化的主题 B。而对于这四个部分，我们又可以继续分析它们的特征和结构。比如主题 A 为小调，主题 B 为大调。其中主题 A 是一个复合乐段（compound period1），它在结构上可以分为前句（antecedent）和后句（consequent），而这两部分在结构上又可以继续分解。这个过程可以不断继续，直至将整首夜曲分解为一个个音符。
这种庖丁解牛式的分析便是本文要说的第一类音乐分析。在这类分析中，一首音乐作品可以分解成几个部分，每个部分又可以继续分解为更小的部分。而对于这些部分，我们则可以从音高、节奏、和声等角度分析它们的特征。
第二类分析：生成机制 如果说第一类分析是庖丁解牛，那么第二类分析便是在基因层面探究为什么牛是我们所看到的这个样子。第二类分析通常预设，我们听到的音乐、读到的谱都是表象，表象之下有更基本的东西，而音乐便是从这些更基本的东西发展或生成出来的。
Schoenberg 是第二类分析的一位代表人物，他总是用一种动机-发展的视角去分析音乐。比如下面是 Schoenberg 对贝多芬第一钢琴奏鸣曲的开头的分析2：
在 Schoenberg 的分析中，这段开头的核心素材非常少，就是 a、b、c 这三个动机。这三个动机要么直接复制，要么在音高或节奏上作少许变异，从而生成新的动机。新的动机加上原有的动机最终组合出这整段开头。简单地说，这整段开头是动机 a、b、c 在复制、变异、组合的操作下生成出来的。
Schenker 是第二类分析的又一位代表人物。他认为，当你从音乐中去掉装饰音、经过音、邻音等在结构上不太重要的素材后，可以见到表层血肉之下更为基本的骨架。下面就是一个例子3：
在这个例子中，从上到下，音乐不断去掉血肉，最终展露出骨架。相反，以骨架为基础，我们也可以不断添加血肉，从而生成出完整的音乐。
Schoenberg 和 Schenker 的理论并不相同，但两者都试图深入到音乐的表象之下，抓住更基本的东西，也就是我这里所说的「生成机制」。有的音乐类型本身就很能体现「生成」的视角。比如在一些极简主义音乐中，简单的素材通过节奏上的错位，生成出丰富且预料之外的音响效果。这种生成的视角也会引导我们思考算法作曲或自动作曲领域的问题，比如怎么从无到有生成一部完整的音乐作品，我们需要哪些基本素材，又需要哪些基本操作。
我们下面用第二类分析来审视肖邦的夜曲。首先，如上文所述，肖邦的夜曲分成四个部分，即 A、B、A&#39; 和 B&#39;。其中 A&#39; 表示 A 带有变化的复现。下面是主题 A 的开头：
下面是 A&#39; 的开头：
对比 A&#39; 和 A 可以发现，A&#39; 中加入了很多肖邦式的连音，旋律的走向也有变化。换句话说，A 变异后得到 A&#39;，两者加上主题 B 及其变异组合出了整首夜曲。</description>
    </item>
    
    <item>
      <title>学习时要避免犯错吗？</title>
      <link>https://flujoo.github.io/cn/learn-from-errors/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/cn/learn-from-errors/</guid>
      <description>错误这种东西通常以反面形象出现，难让人喜欢。人们谈到学习中的错误时，也往往是说，要避免错误，或是改正错误。这里透露的信息是，错误是不好的，最好能从学习中去掉。错误这么不受待见，可能有两方面的原因：
第一，错误对学习效果有消极的影响。比如学钢琴时，你要是养成了错误的弹琴手势，演奏效果就会受影响。而且之后要改也会很麻烦，得花去不必要的时间精力。所以不如一开始就小心翼翼，避免犯错。
第二，错误给人的感受不好，让人不痛快。比如错误会让学习的过程变得磕磕绊绊，一点都不顺畅，而人们通常更喜欢一气呵成、行云流水的感觉；又比如总是犯错会让人觉得自己笨，怀疑智商，怀疑人生。所以不如尽量少犯错，让学习过程更开心愉悦。
这两点一个关乎「效果」，一个关乎「感受」。实际上，错误与这两点的关系并没有那么简单，本文将从心理学的角度来谈一谈。
错误对学习效果的消极影响 上文提到，如果错误养成习惯，改起来就会很麻烦，得花费本不必要的时间精力。关于这一点，心理学中的确有很多证据。
七十年代，美国两位心理学家就做过一个实验，实验流程简化一下大概是这样的：1
你坐在电脑屏幕前，屏幕上会出现一些字母。这些字母可能来自「好字母组」，比如 B、C、D、F 等等；也可能来自「坏字母组」，比如 Q、R、S、T 等等。当屏幕上出现好字母的时候，你需要按下空格键。
心理学家就让你不断练习上面这个流程。一开始你肯定总是出错，但是越练就越熟练。练了上千次之后，技法已经炉火纯青。
在这个时候，心理学家告诉你，实验进入了第二阶段。别的都一样，只是当屏幕上出现坏字母的时候，你才按下空格键。注意，第一阶段是看到好字母才按键的，所以第二阶段练习的技能和第一阶段正好相反。
这时候你发现自己本来很熟练的技法回到了原点，你又变得像最初那样笨手笨脚了。你没有放弃，继续练习。但是你发现自己花费了几倍的时间，才达到第一阶段的水平。
也就是说，在第一阶段中，你培养了「错误的习惯」，它消极地影响了你在第二阶段的学习，让你不得不花费更多的时间来纠正错误。而如果你没有经历第一阶段的话，这些时间是完全可以省下来的。
在原始实验中，实验参与者在第二阶段练了 2400 次，才达到第一阶段练了 900 次的水平。几乎是三倍的差距！
这个实验非常直观地说明了错误所带来的不必要的代价。
很多科学家和教育者可能并不知道这个实验，但他们也非常认同要避免错误，要尽可能消除错误对学习的影响。
比如著名的心理学家班杜拉（Albert Bandura；有多著名？其论文的引用量是好几万这个级别的）就表达过，老师需要从一开始就一步步引导你的学习过程，而不是让你自己错误百出地瞎努力。你做对的时候，老师给予反馈，积极地鼓励你，做错的时候，老师则忽视，以免强化错误。2
错误的另一面 然而上面说的只是现实的一面，心理学中还有另外一系列研究，这些研究得出的结论恰恰是相反的：错误有助于学习。
为什么会这样？我们来看一项 2009 年的研究，实验流程简化一下大概是这样的：3
心理学家让你和你的朋友来做实验。你会先看一个词，比如「鲸鱼」，然后心理学家告诉你，接下去会给你看另一个词，这个词和「鲸鱼」有关，但是不告诉你，让你先猜一下。你肯定会想，这尼玛怎么猜？但你还是猜了，比如「大海」。结果发现猜错了，正确答案是「哺乳动物」。这什么玩意儿？你心里虽然这么想，但还是接着做了很多猜词游戏，基本都猜错。
在你朋友那边，心理学家也会给他看一个词，比如「鲸鱼」，但是没让他猜，而是直接给他展示相关的另一个词，「哺乳动物」。之后也都是这样。
这个流程完了之后，心理学家给你们来了个考试。考试的内容就是，给你们一个之前出现过的词，比如「鲸鱼」，你写出和它配对的词，「哺乳动物」。结果发现，你的成绩比你朋友好！
也就是说，你虽然猜错了，但是学习效果却更好。
这样的实验从六十年代就有人做了，一直做到现在，结论都是类似的：出错更有助于学习。
你可能会觉得这个实验太假了，不像是我们通常所说的学习。没事，2009 年还有一项更真实的研究，其中使用的实验材料是文章。4 实验流程大概是，你朋友直接读一篇文章，而你在读之前，心理学家先问了你一些涉及文章中概念的问题。公平起见，这些问题也告诉你朋友了，只是没让他回答。结果发现，虽然你回答问题的时候有很多错误，但还是你学习的效果更好。
这系列实验还发现了一个有意思的现象，英文是 hypercorrection effect ，姑且翻译成「超级改正现象」吧。这个现象指的是，如果你对自己的回答非常有信心，非常肯定自己答对了，结果却答错了，那么学习效果会更好。有点像是打脸打得你印象深刻。
产生这个现象的原因可能是当你非常自信，结果却打脸的时候，你会被 shock 到，会变得非常集中注意力，导致对做错的题目更上心，所以学习效果更好。脑电方面的实验为此提供了证据：
上图红色线代表很有信心但做错的人的脑电反应，黑色线代表本来就没啥信心然后做错的人的脑电反应。在一些波幅上，红色线更加高涨，这代表了有信心但做错的人注意力更投入。5
需要强调的是，上面这些研究中，错误的积极作用背后有一个非常关键的因素：反馈。反馈是指，不能仅仅告诉你对还是错，要告诉你正确答案是什么，而且还要保证你有认真在听，最好还要给你深入解释解释。如果没有反馈，犯错本身并不能让学习效果更好。
错误到底好还是坏？ 上面一下说错误有害，一下说错误有利，感觉有点矛盾？可以这么来总结：
错误有害的实验涉及的时间更长，往往是长期养成的错误技能或习惯。学习中我们的确应该避免这种一条路走到黑，不撞南墙不回头的史诗级错误。
而错误有利的实验中错误往往更小，学习过程中总是会遇到，不可避免。遇到这种错误时不用害怕，应该努力搞清楚什么是正确的。
牛逼的人重视错误 说到这里，你也许已经意识到，错误只是一个引子，出现错误后你是怎么做的，你有没有重视错误，这些因素会影响你的学习效果。你可能也从各种传记中读到过，牛逼的人往往重视错误，善于从中学习。心理学实验也印证了这一点。
你可能听过成长心态这个概念。成长心态，英文是 growth mindset，它的意思其实非常简单：它是一种态度，或者信念，具有这样态度的人很积极，他们认为自己的智力或者能力是可以改变的，尤其是可以通过努力改变。相信你可以感受到成长心态背后蓬勃的正能量。心理学家做了很多研究，发现这么一个小小的成长心态，会深刻影响人们的想法和行为。具有成长心态的人因为相信自己的能力可以改变，所以更加努力，更好学，更能坚持，更不容易被困难打倒，更能从错误中学习，等等，也因此有更高的成就。
成长心态的人这么牛逼，他们具体有些什么做法呢？心理学家就研究了他们是如何应对错误的。6实验流程大致是，让一些学生坐在电脑前回答问题。这些学生一半是成长心态，一半不是。问题会显示在屏幕上，学生输入答案，电脑会反馈对错，然后显示正确的答案。出乎这些学生意料的是，全部做完之后，心理学家会把他们做错的题目拿出来，再让他们做一遍，结果发现成长心态的人正确率更高：
心理学家还记录了学生们的脑电信号，结果很有意思：
成长心态的人对犯错之后，电脑提供的正确答案反应更大，说明他们对改正错误更上心；而非成长心态的人对对错本身反应更大，说明他们更在乎自己表现得如何，而不是如何改正，如何进步。
别被感受误导 我们最后来说说「感受」这个话题。文章开头提到，错误给人的感受不好，让人不痛快。虽然相比于实际的学习效果，感受这种东西显得无足轻重，但实际上，感受会微妙地影响你如何应对错误。
通过之前的实验我们知道，直接让你读一遍文章，不如在读之前先让你回答问题，哪怕你回答的都是错的，学习效果也比直接读文章更好。但是人们通常并没有意识到「先错再读」的学习效果，好于「直接读」。甚至是，那些刚刚参与了实验并感受到了效果的学生，他们依然觉得直接读，也就是不犯错的学习方法，其学习效果更好。7
这种误判和错误给人们的感受是分不开的。良药苦口利于病，但你却不爱吃。我之后的文章会再涉及这个话题。
  Shiffrin, R. M., &amp;amp; Schneider, W.</description>
    </item>
    
    <item>
      <title>记忆训练有用吗？</title>
      <link>https://flujoo.github.io/cn/does-memory-training-work/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flujoo.github.io/cn/does-memory-training-work/</guid>
      <description>简单地说，有用。
但是记忆训练或者记忆策略并不只有单一的一种，本文将要探讨三类，这三类记忆训练侧重点并不相同：
 第一类让你记得更「快」。 第二类让你记得更「多」。 第三类让你记得更「久」。  而这三类记忆训练的效果也各不相同：
 第一类暂时缺乏有力的证据证明其有用。 第二类有用，但是效果的范围有限。 第三类有用，但是效果的程度有限。  第一类记忆训练：记得更快 简单粗暴地打个比方：记住东西的过程就像工厂生产产品。记忆工厂接收的原料是生活中的发生的事情，书本上看到的信息，身体产生的感觉，等等。最终的产品则是你脑中存储的记忆，比如新同事的名字，去新开的餐馆的路线，驾驶技能，等等。
你的大脑中记忆产品数量庞大，种类丰富，但是这是工厂长时间积累出来的，工厂的效率其实并不高。也就是说，你记东西的过程其实并不快。
比如下面有几个数字：
1，9，8
你看一眼就可以记住。
但是如果多给你几个：
0，2，5，9，2，3，7，8，1，4，5，6，7，2，9，4，5，6，2，8，2
你看十八眼未必记得住。如果我再让你把这些数倒着复述出来，难度就会更大，你的工厂一下子操作不过来。
同时将多个东西放在脑海中，然后操作它们，这在心理学上称为工作记忆（working memory）。工作记忆很像是电脑的内存，越大越好，越大你就能越快加工信息。而相比于大脑中存储的浩瀚的记忆，工作记忆其实小得可怜。
那接下来你就会很自然地发出灵魂一问：能不能增大工作记忆？
有这样的训练，这类训练在心理学里统称为认知训练（cognitive training）。认知训练的基本思路是，大脑的各种能力就像肌肉，重复的训练可以提高相应的能力，就像举铁练肌肉一样。比如让你记数字，通过不断的练习你能记住越来越多的数字，而这背后是你工作记忆的增强。
认知训练有很多形式，比如下面这个游戏：
上方符号通过隧道之后会丢失一个，需要你选出丢失的是哪一个。随着难度的增加，符号总数会增加。很明显，这个游戏会用到你的工作记忆。
这样的训练一百多年前就有人研究和推广了，只是当时这种训练对大众来说充满神秘色彩，居然和蛇油这类东西一起贩卖1。最近几年，这个话题又再度火起来，在心理学领域火，在教育市场上也火，而且也争议不断。2014 年，国际上一波科学家，超过 70 人，联名写了一封公开信，质疑认知训练的效果。几个月后，另一波包括 133 名科学家和相应的从业者的团体又联名反驳，说有大量证据证明认知训练有效2。
认知训练到底有没有用？目前的结论是，没有充分的证据支持认知训练真正有效2。具体到训练工作记忆的认知训练，结论也一样3。
什么叫「真正有效」？比如你练肌肉，你会很自然地认为你用杠铃练得的肌肉不仅可以用来举杠铃，也可以用来扛水，可以用来搬书柜。你不会认为你用杠铃练得的肌肉只能举杠铃。也就是说，举杠铃锻炼的不光光是举杠铃，而是肌肉，或者说是你操作重物的能力。回到认知训练，你要增强工作记忆，你花了钱下了一个 APP，你通过练习在 APP 里的表现不断提高，但你不希望这个效果只局限于这个 APP，你希望在真实的生活中你能更快地加工信息，你能一下记住更多数字，等等。
而认知训练现有的证据不足以支持认知训练能带来这样的效果。你通过不断练习，的确可以在练习本身上更厉害，但是换一个差异很大的任务，你就不行了，虽然这个任务需要的也是工作记忆。这就好比，你举杠铃之后，举杠铃的能力增加了，举哑铃的能力也增加了，仅此而已。你搬书柜的能力？I‘m sorry，暂时没办法通过让你举杠铃来锻炼你搬书柜的能力。
第二类记忆训练：记得更多 电脑的内存小是小，但我们可以优化软件。通过软件层面的办法可以一定程度突破内存的局限。我们下面要讨论的训练就像是软件层面的办法。
还是举个例子先：
d，a，l，a，o，h，u，c，h，i，x，i，a，o，m，i，m，i
抱歉，我又丢给你了一大串羞辱人类工作记忆的信息。但是别急着哭泣，我们来动点手脚：
da lao hu chi xiao mi mi
再动点手脚：
大老虎吃小咪咪
当你知道原先那一大串字母原来是这个意思，你就可以很快记住它们了。
帮你记得更多的这类记忆训练的核心就是这么简单，这么无趣。但是换个例子，你会发现这种方法效果惊人。
著名心理学家 Ericsson 做过一个实验4：他找来一个大学生，让他不断练习一个游戏：以每秒一个数字的速度向这位大学生随机读数字（0 到 9 之间），停止的时候，大学生需要把这些数字复述出来。练习的频率大概每周两三次，每次一个小时。最开始的时候，这个大学生只能记住 7 个数字——正常人也差不多就是这个水平。但是当练了 200 次之后，他能记住 82 个数字！这几乎是正常人的 10 倍多。</description>
    </item>
    
  </channel>
</rss>
